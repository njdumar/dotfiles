- name: install-arch.yml - archlinux base setup
  hosts: localhost
  become: no

  tasks:

    # Abort if not Archlinux --------------------------------------

    # Setup AUR builder ----------------------------------------
    - name: Create the `aur_builder` user
      become: yes
      ansible.builtin.user:
        name: aur_builder
        create_home: yes
        group: wheel

    - name: Allow the `aur_builder` user to run `sudo pacman` without a password
      become: yes
      ansible.builtin.lineinfile:
        path: /etc/sudoers.d/11-install-aur_builder
        line: 'aur_builder ALL=(ALL) NOPASSWD: /usr/bin/pacman'
        create: yes
        validate: 'visudo -cf %s'

    # System Update --------------------------------------
    - name: update system
      become: yes
      pacman:
        update_cache: yes
        upgrade: yes

    # Package Installation --------------------------------------
    - name: install packages
      become: yes
      pacman:
        update_cache: yes
        name:
          # essentials
          - base-devel
          - gvim
          - neovim
          - libusb
          - libusb-compat
          - git
          - tig
          - yay
          - tmux
          - terminator
          - alacritty
          - keychain
          - xclip
           # utilities
          - network-manager-applet
          - dmenu
          - samba
          - smbclient
          - dunst
          - htop
          - btop
          - bash-completion
          # Audio
          - pipewire
          - pipewire-alsa
          - pipewire-docs
          - playerctl
          - pavucontrol
          - pasystray
          - bluez
          - bluez-utils
          - blueman
          # Fonts
          - ttf-dejavu
          # Programming
          - go
          - python
          - python-pip
          - clang
          - gdb
          - ccls
          - ctags
          - cscope
          - nodejs
          - yarn
          - fzf
          - ccache
          - doxygen
          # Random Tools
          - firefox
          - chromium
          - shutter
          - gimp
          - tree
          - libreoffice-fresh
          - remmina
          - freerdp
          - feh
          - arandr
          - rsync
          - vlc
          - the_silver_searcher
          # Printing
          - cups
          - cups-pdf
          # services
          - docker
          - docker-compose
          - openssh
          - virtualbox
          - virtualbox-host-dkms
          - linux-lts-headers
          # i3
          - i3-wm
          - i3status
          - i3lock

    # Install AUR packages ---------------------------------------------------
    - name: Install package_name_1 and package_name_2 using yay
      kewlfft.aur.aur:
        use: yay
        name:
          - alacritty-themes
          - python36
          - slack-desktop
          - xrdp
          - xbanish
          - ttf-iosevka

    # Start Services ---------------------------------------------------
    - name: Start ssh service
      become: yes
      systemd:
        name: sshd
        enabled: yes
        state: started

    - name: Start docker service
      become: yes
      systemd:
        name: docker
        enabled: yes
        state: started

    - name: Start xrdp service
      become: yes
      systemd:
        name: xrdp
        enabled: yes
        state: started

    - name: Start bluetooth service
      become: yes
      systemd:
        name: bluetooth
        enabled: yes
        state: started

    - name: Start cups service
      become: yes
      systemd:
        name: cups
        enabled: yes
        state: started

    # Virtualbox Setup --------------------------------------------------
    - name: Add the vboxdrv module
      become: yes
      community.general.modprobe:
        name: vboxdrv
        state: present

    - name: Ensure group "docker" exists
      become: yes
      ansible.builtin.group:
        name: docker
        state: present

    - name: Adding existing user '{{ ansible_user }}' to group docker
      become: yes
      user:
        name: '{{ ansible_user }}'
        groups: docker
        append: yes

    # Remote Desktop Firewall Config -----------------------------------
    - name: permit remote desktop port traffic
      become: yes
      ansible.posix.firewalld:
        port: 3389/tcp
        permanent: yes
        state: enabled
